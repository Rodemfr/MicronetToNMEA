All the description below is the result of an observation of the data traffic transiting between Micronet devices.
The interpretation of this traffic is purely speculative and might be completely erroneous.
The NMEA conversion seems to work well, so many of these interpretation are probably correct, but a number of strange
observations let think that there are also a lot a misinterpretations.

As a conclusion, if you want to play with your system and understand it better, you are at the right place. But if
you want to have a robust, reliable and waterproof device which has been extensively tested, you would better go to your
nearest Raymarine/TackTick reseller.

***************************
*** Radio specification ***
***************************

Carrier frequency : 869.784MHz in Europe. Measured on my own TackTick network. I don't know is this frequency might change
                    in some circumstance.
Modulation : 2-FSK
Deviation : 32kHz
Sync word after preamble : 0x5599

All data after the sync word is the Micronet message discribed below.

***********************************************
*** Header common to every Micronet message ***
***********************************************

General format :

|83 03 77 37|02|03 90 87|02|01|07|5A|18 18|xx xx xx xx ...
|    NID    |DT|  DID   |MI|SO|DE|CS| LEN |   
|             MESSAGE HEADER              |    PAYLOAD ...

NID = Network ID, is equal to the Device ID of the network main display

DT + DID = Device ID (4 bytes) - Unique number identifying the device. The first byte DT defines the device type :
     DT - Device Type
          0x01 Hull Transmitter
          0x02 Wind Transducer
          0x03 NMEA Converter
          0x04 Mast Rotation Sensor
          0x05 MOB
          0x06 SDPOD
          
          0x83 Analog Wind Display
          0x81 Dual Display

MI = Message ID (1 bytes) - Type of the message. Necessary for the receiver to know how to decode payload.
     0x01 Request Data
     0x02 Send Data
     0x06 Set Parameter
     0x0a ?
     0x0b ?

SO = Source
     0x01 Measurement/non display device
     0x09 Display device

DE = Destination
     0x00 Broadcast / All devices
     0x09 Display

CS = Check sum of all previous bytes from NID to DE included.

LEN = (Length - 2) of the complete message in bytes, including payload. Value duplicated on two bytes for robustness since it
      is not covered by the header checksum.

***********************************
*** Message 0x01 (Request Data) ***
***********************************

This message is sent by the main display to request other devices to send back their measured data. The main display is the one
with which you powered the system. The initial handshake tells who, of all the displays, is the main one. The main display
explicitely list all the device he wants data from. It knows this list from the auto network sequence before installation.

This message also gives the previous "PL" value for each device which gives the maximum number of bytes expected in the payload
of the device "Send Data" message. Also, if a device has to send sevral messages, it will be listed twice in the list. This
way, we have a complete temporal map of the data exchange, allowing to know where to transmit our own messages, without
colliding with other devices.

Here is the format (with an example) :

|83 03 77 37|83|03 77 37|01|09|00|72|28 28|83 03 77 37|1C|02 03 90 87|0C|01 0B C0 22|26|81 03 70 82|0E|83 03 77 37|0E|00 00|52|
|    NUID   |DT|  DID   |MI|SO|DE|CS| LEN |    DID1   |PL|    DID2   |PL|    DID3   |PL|    DID4   |PL|    DID5   |PL| ??? |CS|
|             MESSAGE HEADER              |                                 REQUESTED DEVICES                                 |

DIDn - Device we request data from. Note that the sender is giving its own address, letting me think that the message could be
       better interpreted as a way of telling who is part of the network.
       
PL - Maximum payload length of the message expected from the advertised DID

CS - Checksum of the entire payload

********************************
*** Message 0x02 (Send Data) ***
********************************

This message is used to send data from one device to one another. It is a response to "Request Data" message sent by the main
display to collect data from all sensors. It sends a variable number of fields depending on the Device Type and its available
sensors.
Each field is coded the same way but with variable size and type. The number of fields can be dynamically discovered during
decoding by comparing each field position to the complete message size.

Message examples :

Message from wind transducer
|83 03 77 37|02|03 90 87|02|01|09|5C|18 18|04 05 05 00 2C 3A|04 06 05 FF FB 09|	
|    NUID   |DT|  DID   |MI|SO|DE|CS| LEN |FL|FI|FP| AWS |FC|FL|FI|FP| AWA |FC|
|             MESSAGE HEADER              |      FIELD1     |      FIELD2     |

Message sent by an analog wind display
|83 03 77 37|83|03 77 37|02|09|00|73|1A 1A|05 21 05 00 00 09 34|05 22 05 00 64 09 99|
|    NID    |DT|  DID   |MI|SO|DE|CS| LEN |FL|FI|FP| AWS |??|FC|FL|FI|FP| AWA |??|FC|
|             MESSAGE HEADER              |       FIELD1       |       FIELD2       |

Message sent by a dual display
|83 03 77 37|81|03 70 82|02|09|00|B5|1A 1A|05|21|05|00 00|09|34|05 22 05 00 33|09|68|
|    NID    |DT|  DID   |MI|SO|DE|CS| LEN |FL|FI|FP| AWS |??|FC|FL|FI|FP| AWA |??|FC|
|             MESSAGE HEADER              |       FIELD1       |       FIELD2       |

Message sent by a hull transmitter
|83 03 77 37|01|0B C0 22|02|01|09|2E|49 49|04|04|05|13 89|A9|04|1B|05|00 89|AD|05|21|05|00 00|06|31|05|22|05|FF F5|06|26|04|01|05|00 BB|C5|0A|02|05|00 00 00 95|00 00 00 1C|C2|03|03|05|25|30|04|05|03|00 00|0C|04|06|03|FF F5|01|
|    NID    |DT|  DID   |MI|SO|DE|CS| LEN |FL|FI|FP| DPT |FC|FL|FI|FP| VCC |FC|FL|FI|FP| AWS |??|FC|FL|FI|FP| AWA |??|FC|FL|FI|FP| SPD |FC|FL|FI|FP|   TRIP    |    LOG    |FC|FL|FI|FP|T |FC|FL|FI|FP| AWS |FC|FL|FI|FP| AWA |FC|
|             MESSAGE HEADER              |      FIELD1     |      FIELD2     |       FIELD3       |       FIELD4       |     FIELD5      |              FIELD6               |    FIELD7    |      FIELD8     |     FIELD9      |

Observed Field formats :

|01|02|03|04|05|06|07|08|09|10|11|12|
|03|FI|FP|VA|FC| -> value on a 8bit integer
|04|FI|FP| VAL |FC| -> value on a 16bit integer
|05|FI|FP| VAL |FP|FC| -> value on a 16bit integer followed by an unidentified byte
|06|FI|FP| VAL1| VAL2|FC| -> values on two 16bit integer followed by an unidentified byte
|0a|FI|FP|    VAL1   |    VAL2   |FC| -> two values both on a 32bit integer

FL = Field Length - (FL + 2) is the total length of the field, including CRC, allowing to skip in case the format/ID would be unknown
     0x03 Total field description is on 5 bytes, including CRC. Value is on a 8bit integer.
     0x04 Total field description is on 6 bytes, including CRC. Value is on a 16bit integer.
     0x05 Total field description is on 7 bytes, including CRC. In this case there is an extra byte after the 16bit integer value which is unidentified yet.
     0x0a Total field description is on 12 bytes, including CRC. Two values are encoded on a 32bit integer each.

FI = Field ID
     0x01 SPD
          |01|02|03|04|05|06|
          |04|01|FP| VAL |FC|
          VAL = Speed * 100 (KT)
     0x02 TRIP + LOG
          |01|02|03|04|05|06|07|08|09|10|11|12|
          |0a|02|FP|    VAL1   |    VAL2   |FC|
          VAL1 = Trip * 100 (NM)
          VAL2 = Log *10 (NM) 
     0x03 T*2(degC)
          |01|02|03|04|05|
          |03|03|FP|VA|FC|
          VA = T * 2 (°C)
     0x04 DPT
          |01|02|03|04|05|06|
          |04|04|FP| VAL |FC|
          VAL = Depth * 10 (ft)
          A value of 5001(500.1ft) is given by the hull transmitter when depth is not available.
     0x05 AWS
          |01|02|03|04|05|06|
          |04|05|FP| VAL |FC|
          VAL = ApparentWindSpeed * 10 (kt)
     0x06 AWA(DEG) :
          |01|02|03|04|05|06|
          |04|06|FP| VAL |FC|
          VAL = ApparentWindAngle (deg)
          Values are between -180 and 180
     0x07 HDG(DEG)
          |01|02|03|04|05|06|
          |04|07|FP| VAL |FC|
          VAL = MagHeading (deg)
          Values are between 0 and 360
     0x08 SOG/COG
          |01|02|03|04|05|06|07|08|
          |06|08|FP|VAL1 |VAL2 |FC|
          VAL1 = SOG * 10 (KT)
          VAL2 = COG (Deg)
     0x09 LAT/LON
          |01|02|03|04|05|06|07|08|09|10|11|
          |09|09|FP|LA| LAM |LO| LOM |DI|FC|
          LA = latitude in degrees (integer part)
          LAM = minutes of latitude * 1000
          LO = longitude in degrees (integer part)
          LOM = minutes of longitude * 1000
          DI = Flags : 0x00/0x01 -> South/North
                       0x00/0x02 -> West/East
     0x0A BTW
          |01|02|03|04|05|06|07|08|09|10|11|12|
          |0a|0a|FP| VAL |??|??|??|??|??|??|FC|
          VAL = BTW (Deg)
          Values are between 0 and 360
     0x0B XTE
          |01|02|03|04|05|06|
          |04|0b|FP| VAL |FC|
          VAL = Deviation (NM)
          Positive deviation are right deviation, negative are left
     0x0C TIME
          |01|02|03|04|05|06|
          |04|0c|FP|HH|MM|FC|
          HH = Hours (24h format)
          MM = Minutes
     0x0D Date
          |01|02|03|04|05|06|07|
          |05|0d|FP|DD|MM|YY|FC|
          DD = Day of month
          MM = Month (01 = January)
          YY = Year (from 2000)
     0x12 VMG-WP
          |01|02|03|04|05|06|
          |04|12|FP| VAL |FC|
          VAL = Speed * 100 (KT)
     0x1b VCC
          |01|02|03|04|05|06|
          |04|1b|FP| VAL |FC|
          VAL = Voltage * 10 (V)
     0x1F DTW
          |01|02|03|04|05|06|07|08|
          |06|1f|FP|    VAL    |FC|
          VAL = Distance * 100 (NM)
     0x21 AWS - Seems the be same value than 0x05, but with an unidentified extra byte ? 0x21 is used by non wind-transducer devices to repeat the value.
          |01|02|03|04|05|06|07|
          |04|05|FP| VAL |??|FC|
          VAL = ApparentWindSpeed * 10 (kt)
     0x22 AWA - Seems the be same value than 0x06, but with an unidentified extra byte ? 0x22 is used by non wind-transducer devices to repeat the value.
          |01|02|03|04|05|06|07|
          |04|05|FP| VAL |??|FC|
          VAL = ApparentWindAngle (deg)
          Values are between -180 and 180

FP = Field Property ??
     0x05 It seems to be the value used when the data comes from the measuring sensor
     0x03 It seems to be the value used when the data comes from a repeater (i.e. the main display or hull transmitter)

FC = Field checksum. Sum of the all the byte of the field.

****************************************
*** Message 0x03 (Request Data Slot) ***
****************************************

When a device is not listed in the "Request Data" schedule. It can request a transmission slot to the master device with this
command.

Here is the format (with an example) :

|01 0A 8B 60|01|0B 8B 60|03|01|09|FA|0F 0F|00 1A|1A|
|    NUID   |DT|  DID   |MI|SO|DE|CS| LEN | PL  |PC|

PL - Maximum payload length of a message using this slot

PC - Checksum of the entire payload

************************************
*** Message 0x06 (Set Parameter) ***
************************************

Example : Wind direction calibration +10 deg
|83 03 77 37|83|03 77 37|06|09|09|80|13 13|FF|07|02|0A 00|04 16|
|    NID    |DT|  DID   |MI|SO|??|CS| LEN |??|PI|PL| VA  |SQ|CS|
|             MESSAGE HEADER              |     CORRECTION     |

Example : Wind Speed Calibration +7%
|83 03 77 37|83|03 77 37|06|09|00|77|12 12|FF 06 01 07 0B 18|
|    NID    |DT|  DID   |MI|SO|??|CS| LEN |??|PI|PL|VA|SQ|CS|
|             MESSAGE HEADER              |    CORRECTION   |

Example : Speed filtering level MED
|83 03 77 37|81|03 70 82|06|09|09|C2|12 12|FF|04|01|20|0E|32|
|    NID    |DT|  DID   |MI|SO|??|CS| LEN |??|PI|PL|VA|SQ|CS|
|             MESSAGE HEADER              |    CORRECTION   |

PI Parameter ID
   0x00 Water speed factor
      VA = 8bit unsigned integer. Value is 0x32 + speed correction in % (e.g. 0x30<=>-2%, 0x37<=>+5%)
   0x02 Water temperature offset
      VA = 8bit signed integer. Value is temperature offset * 2, coded in Celsius
   0x03 Distance from depth transducer to waterline or keel
      VA = 8bit signed integer of the offset in ft*10. If the value is positive, it is the distance to waterline. If negative, to the keel.
   0x04 Speed filtering level
      VA = 0x00 : AUTO
      VA = 0x10 : SLOW
      VA = 0x20 : MED
      VA = 0x30 : FAST
   0x05 Wind Speed or Compass heading filtering level
      VA = 0x00 : AUTO (Wind Speed)
      VA = 0x01 : SLOW (Wind Speed)
      VA = 0x02 : MED (Wind Speed)
      VA = 0x03 : FAST (Wind Speed)
      VA = 0x00 : AUTO (Heading) - I see the same code for both Wind and Compass here ? How does the device distinguish ?
      VA = 0x10 : SLOW (Heading)
      VA = 0x20 : MED (Heading)
      VA = 0x30 : FAST (Heading)
   0x06 Wind speed factor
      VA = Speed correction as signed 8bit integer in percent
   0x07 Wind direction offset
      VA = A signed 16-bit integer in degrees /!\ LITTLE ENDIAN VALUE /!\
   0x09 Compass heading offset
      VA = A signed 16-bit integer in degrees /!\ LITTLE ENDIAN VALUE /!\
   0x0D Compass magnetic variation
      VA = Variation as signed 8bit integer in degrees
   0x0E Wind shift - What is it ?
      VA = 8bit unsigned integer

PL Parameter Length ? Seems to be the number of bytes on wich VA is coded.

SQ Sequence number - Incremented by one at each new configuration. Reset to zero at each power-up of the system.
                     Not sure of the usage since I don't see how several configuration messages could possibly have
                     their order changed on the network. Maybe by usage of repeaters? 
         